<?php

namespace MicroBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * FireInspection
 *
 * @ORM\Table(name="fire_inspection")
 * @ORM\Entity(repositoryClass="MicroBundle\Repository\FireInspectionRepository")
 */
class FireInspection
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="scope", type="text")
     */
    private $scope;

    /**
     * @var string
     *
     * @ORM\Column(name="deviceShortlistPosition", type="string", length=255, nullable=true)
     */
    private $deviceShortlistPosition;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="inspectionDate", type="datetime")
     */
    private $inspectionDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="nextInspectionDate", type="datetime")
     */
    private $nextInspectionDate;

    /**
     * One FireInspections has Many DocumentInspectors.
     * @ORM\OneToMany(targetEntity="DocumentInspector", mappedBy="fireInspection", cascade={"persist"})
     */
    private $documentInspectors;

    /**
     * Many FireInspectors have Many Inspectors.
     * @ORM\ManyToMany(targetEntity="Inspector")
     * @ORM\JoinTable(name="fire_inspection_temp_inspectors",
     *      joinColumns={@ORM\JoinColumn(name="fire_inspection_id", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="temp_inspectors_id", referencedColumnName="id", unique=true)}
     *      )
     */
    private $tempInspectors;

    /**
     * @var string
     *
     * @ORM\Column(name="comment", type="text", nullable=true)
     */
    private $comment;

    /**
     * @var string
     *
     * @ORM\Column(name="recomendations", type="text", nullable=true)
     */
    private $recomendations;

    /**
     * @var string
     *
     * @ORM\Column(name="legal", type="text")
     */
    private $legal;

    /**
     * @var string
     *
     * @ORM\Column(name="conclusion", type="text", nullable=true)
     */
    private $conclusion;


    /**
     * One Fire Inspection has Many inspectedDevices.
     * @ORM\OneToMany(targetEntity="MicroBundle\Entity\InspectedDevice", mappedBy="fireInspection", cascade={"persist"})
     */
    private $inspectedDevices;

    /**
     * @var string
     *
     * @ORM\Column(name="otherActivities", type="string", length=255, nullable=true)
     */
    private $otherActivities;

    /**
     * Many FireInspections have One Building.
     * @ORM\ManyToOne(targetEntity="Building", inversedBy="fireInspections", cascade={"persist"})
     * @ORM\JoinColumn(name="building_id", referencedColumnName="id")
     */
    private $building;



}
