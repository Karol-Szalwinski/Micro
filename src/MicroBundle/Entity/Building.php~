<?php

namespace MicroBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;

/**
 * Building
 *
 * @ORM\Table(name="building")
 * @ORM\Entity(repositoryClass="MicroBundle\Repository\BuildingRepository")
 */
class Building
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @var string
     *
     * @ORM\Column(name="street", type="string", length=255)
     */
    private $street;

    /**
     * @var string
     *
     * @ORM\Column(name="house_no", type="string", length=255)
     */
    private $houseNo;

    /**
     * @var string
     *
     * @ORM\Column(name="flat_no", type="string", length=255, nullable=true))
     */
    private $flatNo;

    /**
     * @var string
     *
     * @ORM\Column(name="city", type="string", length=255)
     */
    private $city;

    /**
     * @var string
     *
     * @ORM\Column(name="postal_code", type="string", length=255)
     */
    private $postalCode;


    /**
     * @var string|null
     *
     * @ORM\Column(name="description", type="text", nullable=true)
     */
    private $description;

    /**
     * Many Buildings have One Client.
     * @ORM\ManyToOne(targetEntity="Client", inversedBy="buildings", cascade={"persist"})
     * @ORM\JoinColumn(name="client_id", referencedColumnName="id")
     */
    private $client;

    /**
     * One Building has Many BuildDevice.
     * @ORM\OneToMany(targetEntity="BuildDevice", mappedBy="building", cascade={"persist"})
     */
    private $buildDevices;

    /**
     * One Building has Many FireInspections.
     * @ORM\OneToMany(targetEntity="Document", mappedBy="building", cascade={"persist"})
     */
    private $documents;

    /**
     * @var string
     *
     * @ORM\Column(name="deviceShortlistPosition", type="text", nullable=true)
     */
    private $deviceShortlistPosition;

    /**
     * @ORM\ManyToMany(targetEntity="PdfDocument")
     * @ORM\JoinTable(name="building_pdfs",
     *      joinColumns={@ORM\JoinColumn(name="building_id", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="pdf_id", referencedColumnName="id")}
     *      )
     */
    private $pdfDocuments;


    /**
     * Constructor
     */
    public function __construct()
    {
        $this->buildDevices = new ArrayCollection();
        $this->documents = new ArrayCollection();
        $this->pdfDocuments = new ArrayCollection();
    }


}
