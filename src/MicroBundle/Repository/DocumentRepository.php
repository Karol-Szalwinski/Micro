<?php

namespace MicroBundle\Repository;
/**
 * DocumentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DocumentRepository extends \Doctrine\ORM\EntityRepository

{
    /**
     * @param $id
     * @return mixed
     */
    public function findAllExceptId($id) {
        $qb = $this->createQueryBuilder('Document');
        $qb->add('select', 'f')
            ->add('from', 'MicroBundle:Document f')
            ->add('where', 'f != :id')
            ->setParameter('id', $id);
        return $qb->getQuery()->getResult();
    }


    public function findDocumentDevices($document, $loopNo) {
        $result = $this->createQueryBuilder('Device');

        $dql = $result->select('f','i')
            ->from('MicroBundle:BuildDevice', 'f')
            ->leftJoin('f.docDevices', 'i')
            ->where('i.document =:document')
            ->andWhere('f.loopNo =:loopno')
            ->setParameter('document', $document)
            ->setParameter('loopno', $loopNo)
            ->getQuery()
            ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);


        return $dql;
    }

    public function findMissingDocumentDevices($document, $building, $loopNo) {
        $em = $this->getEntityManager();
        $RAW_QUERY ="
SELECT tab1.id, tab1.name, tab1.shortname, tab1.loop_no, tab1.number, tab1.serial, tab1.address, tab1.description FROM
(
SELECT * FROM `build_device`
WHERE build_device.building_id = ?
AND build_device.loop_no = ?
)
AS tab1
LEFT JOIN
(
SELECT * FROM `doc_device`
WHERE doc_device.document_id = ?
AND doc_device.loop_no = ?
)
AS tab2
ON tab1.id = tab2.build_device_id
WHERE tab2.build_device_id IS NULL
        ";


        $statement = $em->getConnection()->prepare($RAW_QUERY);
        // Set parameters
        $statement->bindvalue(1, $building);
        $statement->bindvalue(2, $loopNo);
        $statement->bindvalue(3, $document);
        $statement->bindvalue(4, $loopNo);
        $statement->execute();

        $result = $statement->fetchAll();

        return $result;
    }

}
