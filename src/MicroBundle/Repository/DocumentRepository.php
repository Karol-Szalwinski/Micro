<?php

namespace MicroBundle\Repository;
/**
 * DocumentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DocumentRepository extends \Doctrine\ORM\EntityRepository

{
    /**
     * @param $id
     * @return mixed
     */
    public function findAllExceptId($id) {
        $qb = $this->createQueryBuilder('Document');
        $qb->add('select', 'f')
            ->add('from', 'MicroBundle:Document f')
            ->add('where', 'f != :id')
            ->setParameter('id', $id);
        return $qb->getQuery()->getResult();
    }


    public function findDevicesByFireInspection($document, $loopId) {
        $result = $this->createQueryBuilder('Device');

        $dql = $result->select('f','i')
            ->from('MicroBundle:BuildDevice', 'f')
            ->leftJoin('f.inspectedDevices', 'i')
            ->where('i.fireInspection =:document')
            ->andWhere('f.loopDev =:loopid')
            ->setParameter('document', $document)
            ->setParameter('loopid', $loopId)
            ->getQuery()
            ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);


        return $dql;
    }

    public function findNullDevicesByFireInspection($document, $loopId) {
        $em = $this->getEntityManager();
        $RAW_QUERY ="SELECT * FROM fire_protection_device
                LEFT JOIN 
                (SELECT fire_protection_device.id AS oldid FROM `fire_protection_device`
                LEFT JOIN inspected_device
                ON fire_protection_device.id = inspected_device.fire_protection_device_id
                WHERE inspected_device.fire_inspection_id = ?)
                AS old
                ON fire_protection_device.id = old.oldid
                WHERE fire_protection_device.loop_dev_id = ?
                AND old.oldid IS NULL
        ";


        $statement = $em->getConnection()->prepare($RAW_QUERY);
        // Set parameters
        $statement->bindvalue(1, $document);
        $statement->bindvalue(2, $loopId);
        $statement->execute();

        $result = $statement->fetchAll();

        return $result;
    }

}
